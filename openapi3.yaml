components:
  parameters:
    asteriskID:
      in: header
      name: X-Asterisk-ID
      required: false
      schema:
        type: string
  requestBodies:
    containers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/containers'
      description: >-
        The "variables" key in the body object holds variable key/value pairs to
        set on the channel on creation. Other keys in the body object are
        interpreted as query parameters. Ex. { "endpoint": "SIP/Alice",
        "variables": { "CALLERID(name)": "Alice" } }
    containers2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/containers'
  schemas:
    Application:
      description: Details of a Stasis application
      properties:
        bridge_ids:
          description: Id's for bridges subscribed to.
          items:
            type: string
          type: array
        channel_ids:
          description: Id's for channels subscribed to.
          items:
            type: string
          type: array
        device_names:
          description: Names of the devices subscribed to.
          items:
            type: string
          type: array
        endpoint_ids:
          description: '{tech}/{resource} for endpoints subscribed to.'
          items:
            type: string
          type: array
        events_allowed:
          description: Event types sent to the application.
          items:
            type: object
          type: array
        events_disallowed:
          description: Event types not sent to the application.
          items:
            type: object
          type: array
        name:
          description: Name of this application
          type: string
      required:
        - bridge_ids
        - channel_ids
        - device_names
        - endpoint_ids
        - events_allowed
        - events_disallowed
        - name
      type: object
    ApplicationMoveFailed:
      allOf:
        - description: >-
            Notification that trying to move a channel to another Stasis
            application failed.
          properties:
            args:
              description: Arguments to the application
              items:
                type: string
              type: array
            channel:
              $ref: '#/components/schemas/Channel'
            destination:
              type: string
          required:
            - args
            - channel
            - destination
          type: object
        - $ref: '#/components/schemas/Event'
    ApplicationReplaced:
      allOf:
        - description: >-
            Notification that another WebSocket has taken over for an
            application.


            An application may only be subscribed to by a single WebSocket at a
            time. If multiple WebSockets attempt to subscribe to the same
            application, the newer WebSocket wins, and the older one receives
            this event.
        - $ref: '#/components/schemas/Event'
    AsteriskInfo:
      description: Asterisk system information
      properties:
        build:
          $ref: '#/components/schemas/BuildInfo'
          description: Info about how Asterisk was built
        config:
          $ref: '#/components/schemas/ConfigInfo'
          description: Info about Asterisk configuration
        status:
          $ref: '#/components/schemas/StatusInfo'
          description: Info about Asterisk status
        system:
          $ref: '#/components/schemas/SystemInfo'
          description: Info about the system running Asterisk
      type: object
    AsteriskPing:
      description: Asterisk ping information
      properties:
        asterisk_id:
          description: Asterisk id info
          type: string
        ping:
          description: Always string value is pong
          type: string
        timestamp:
          description: The timestamp string of request received time
          type: string
      required:
        - asterisk_id
        - ping
        - timestamp
      type: object
    Bridge:
      description: |-
        The merging of media from one or more channels.

        Everyone on the bridge receives the same audio.
      properties:
        bridge_class:
          description: Bridging class
          type: string
        bridge_type:
          description: Type of bridge technology
          type: string
        channels:
          description: Ids of channels participating in this bridge
          items:
            type: string
          type: array
        creationtime:
          description: Timestamp when bridge was created
          format: date
          type: string
        creator:
          description: Entity that created the bridge
          type: string
        id:
          description: Unique identifier for this bridge
          type: string
        name:
          description: Name the creator gave the bridge
          type: string
        technology:
          description: Name of the current bridging technology
          type: string
        video_mode:
          description: >-
            The video mode the bridge is using. One of 'none', 'talker', or
            'single'.
          type: string
        video_source_id:
          description: >-
            The ID of the channel that is the source of video in this bridge, if
            one exists.
          type: string
      required:
        - bridge_class
        - bridge_type
        - channels
        - creationtime
        - creator
        - id
        - name
        - technology
      type: object
    BridgeAttendedTransfer:
      allOf:
        - description: Notification that an attended transfer has occurred.
          properties:
            destination_application:
              description: Application that has been transferred into
              type: string
            destination_bridge:
              description: Bridge that survived the merge result
              type: string
            destination_link_first_leg:
              $ref: '#/components/schemas/Channel'
              description: First leg of a link transfer result
            destination_link_second_leg:
              $ref: '#/components/schemas/Channel'
              description: Second leg of a link transfer result
            destination_threeway_bridge:
              $ref: '#/components/schemas/Bridge'
              description: Bridge that survived the threeway result
            destination_threeway_channel:
              $ref: '#/components/schemas/Channel'
              description: Transferer channel that survived the threeway result
            destination_type:
              description: How the transfer was accomplished
              type: string
            is_external:
              description: Whether the transfer was externally initiated or not
              type: boolean
            replace_channel:
              $ref: '#/components/schemas/Channel'
              description: The channel that is replacing transferer_first_leg in the swap
            result:
              description: The result of the transfer attempt
              type: string
            transfer_target:
              $ref: '#/components/schemas/Channel'
              description: The channel that is being transferred to
            transferee:
              $ref: '#/components/schemas/Channel'
              description: The channel that is being transferred
            transferer_first_leg:
              $ref: '#/components/schemas/Channel'
              description: First leg of the transferer
            transferer_first_leg_bridge:
              $ref: '#/components/schemas/Bridge'
              description: Bridge the transferer first leg is in
            transferer_second_leg:
              $ref: '#/components/schemas/Channel'
              description: Second leg of the transferer
            transferer_second_leg_bridge:
              $ref: '#/components/schemas/Bridge'
              description: Bridge the transferer second leg is in
          required:
            - destination_type
            - is_external
            - result
            - transferer_first_leg
            - transferer_second_leg
          type: object
        - $ref: '#/components/schemas/Event'
    BridgeBlindTransfer:
      allOf:
        - description: Notification that a blind transfer has occurred.
          properties:
            bridge:
              $ref: '#/components/schemas/Bridge'
              description: The bridge being transferred
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel performing the blind transfer
            context:
              description: The context transferred to
              type: string
            exten:
              description: The extension transferred to
              type: string
            is_external:
              description: Whether the transfer was externally initiated or not
              type: boolean
            replace_channel:
              $ref: '#/components/schemas/Channel'
              description: >-
                The channel that is replacing transferer when the transferee(s)
                can not be transferred directly
            result:
              description: The result of the transfer attempt
              type: string
            transferee:
              $ref: '#/components/schemas/Channel'
              description: The channel that is being transferred
          required:
            - channel
            - context
            - exten
            - is_external
            - result
          type: object
        - $ref: '#/components/schemas/Event'
    BridgeCreated:
      allOf:
        - description: Notification that a bridge has been created.
          properties:
            bridge:
              $ref: '#/components/schemas/Bridge'
          required:
            - bridge
          type: object
        - $ref: '#/components/schemas/Event'
    BridgeDestroyed:
      allOf:
        - description: Notification that a bridge has been destroyed.
          properties:
            bridge:
              $ref: '#/components/schemas/Bridge'
          required:
            - bridge
          type: object
        - $ref: '#/components/schemas/Event'
    BridgeMerged:
      allOf:
        - description: Notification that one bridge has merged into another.
          properties:
            bridge:
              $ref: '#/components/schemas/Bridge'
            bridge_from:
              $ref: '#/components/schemas/Bridge'
          required:
            - bridge
            - bridge_from
          type: object
        - $ref: '#/components/schemas/Event'
    BridgeVideoSourceChanged:
      allOf:
        - description: Notification that the source of video in a bridge has changed.
          properties:
            bridge:
              $ref: '#/components/schemas/Bridge'
            old_video_source_id:
              type: string
          required:
            - bridge
          type: object
        - $ref: '#/components/schemas/Event'
    BuildInfo:
      description: Info about how Asterisk was built
      properties:
        date:
          description: Date and time when Asterisk was built.
          type: string
        kernel:
          description: Kernel version Asterisk was built on.
          type: string
        machine:
          description: 'Machine architecture (x86_64, i686, ppc, etc.)'
          type: string
        options:
          description: 'Compile time options, or empty string if default.'
          type: string
        os:
          description: OS Asterisk was built on.
          type: string
        user:
          description: Username that build Asterisk
          type: string
      required:
        - date
        - kernel
        - machine
        - options
        - os
        - user
      type: object
    CallerID:
      description: Caller identification
      properties:
        name:
          type: string
        number:
          type: string
      required:
        - name
        - number
      type: object
    Channel:
      description: A specific communication connection between Asterisk and an Endpoint.
      properties:
        accountcode:
          type: string
        caller:
          $ref: '#/components/schemas/CallerID'
        channelvars:
          description: Channel variables
          type: object
        connected:
          $ref: '#/components/schemas/CallerID'
        creationtime:
          description: Timestamp when channel was created
          format: date
          type: string
        dialplan:
          $ref: '#/components/schemas/DialplanCEP'
          description: Current location in the dialplan
        id:
          description: |-
            Unique identifier of the channel.

            This is the same as the Uniqueid field in AMI.
          type: string
        language:
          description: The default spoken language
          type: string
        name:
          description: Name of the channel (i.e. SIP/foo-0000a7e3)
          type: string
        state:
          type: string
      required:
        - accountcode
        - caller
        - connected
        - creationtime
        - dialplan
        - id
        - language
        - name
        - state
      type: object
    ChannelCallerId:
      allOf:
        - description: Channel changed Caller ID.
          properties:
            caller_presentation:
              description: The integer representation of the Caller Presentation value.
              format: int32
              type: integer
            caller_presentation_txt:
              description: The text representation of the Caller Presentation value.
              type: string
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel that changed Caller ID.
          required:
            - caller_presentation
            - caller_presentation_txt
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelConnectedLine:
      allOf:
        - description: Channel changed Connected Line.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel whose connected line has changed.
          required:
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelCreated:
      allOf:
        - description: Notification that a channel has been created.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
          required:
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelDestroyed:
      allOf:
        - description: Notification that a channel has been destroyed.
          properties:
            cause:
              description: Integer representation of the cause of the hangup
              format: int32
              type: integer
            cause_txt:
              description: Text representation of the cause of the hangup
              type: string
            channel:
              $ref: '#/components/schemas/Channel'
          required:
            - cause
            - cause_txt
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelDialplan:
      allOf:
        - description: Channel changed location in the dialplan.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel that changed dialplan location.
            dialplan_app:
              description: The application about to be executed.
              type: string
            dialplan_app_data:
              description: The data to be passed to the application.
              type: string
          required:
            - channel
            - dialplan_app
            - dialplan_app_data
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelDtmfReceived:
      allOf:
        - description: >-
            DTMF received on a channel.


            This event is sent when the DTMF ends. There is no notification
            about the start of DTMF
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel on which DTMF was received
            digit:
              description: 'DTMF digit received (0-9, A-E, # or *)'
              type: string
            duration_ms:
              description: Number of milliseconds DTMF was received
              format: int32
              type: integer
          required:
            - channel
            - digit
            - duration_ms
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelEnteredBridge:
      allOf:
        - description: Notification that a channel has entered a bridge.
          properties:
            bridge:
              $ref: '#/components/schemas/Bridge'
            channel:
              $ref: '#/components/schemas/Channel'
          required:
            - bridge
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelHangupRequest:
      allOf:
        - description: A hangup was requested on the channel.
          properties:
            cause:
              description: Integer representation of the cause of the hangup.
              format: int32
              type: integer
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel on which the hangup was requested.
            soft:
              description: Whether the hangup request was a soft hangup request.
              type: boolean
          required:
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelHold:
      allOf:
        - description: A channel initiated a media hold.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel that initiated the hold event.
            musicclass:
              description: The music on hold class that the initiator requested.
              type: string
          required:
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelLeftBridge:
      allOf:
        - description: Notification that a channel has left a bridge.
          properties:
            bridge:
              $ref: '#/components/schemas/Bridge'
            channel:
              $ref: '#/components/schemas/Channel'
          required:
            - bridge
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelStateChange:
      allOf:
        - description: Notification of a channel's state change.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
          required:
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelTalkingFinished:
      allOf:
        - description: Talking is no longer detected on the channel.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel on which talking completed.
            duration:
              description: >-
                The length of time, in milliseconds, that talking was detected
                on the channel
              format: int32
              type: integer
          required:
            - channel
            - duration
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelTalkingStarted:
      allOf:
        - description: Talking was detected on the channel.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel on which talking started.
          required:
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelUnhold:
      allOf:
        - description: A channel initiated a media unhold.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
              description: The channel that initiated the unhold event.
          required:
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelUserevent:
      allOf:
        - description: >-
            User-generated event with additional user-defined fields in the
            object.
          properties:
            bridge:
              $ref: '#/components/schemas/Bridge'
              description: A bridge that is signaled with the user event.
            channel:
              $ref: '#/components/schemas/Channel'
              description: A channel that is signaled with the user event.
            endpoint:
              $ref: '#/components/schemas/Endpoint'
              description: A endpoint that is signaled with the user event.
            eventname:
              description: The name of the user event.
              type: string
            userevent:
              description: Custom Userevent data
              type: object
          required:
            - eventname
            - userevent
          type: object
        - $ref: '#/components/schemas/Event'
    ChannelVarset:
      allOf:
        - description: Channel variable changed.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
              description: |-
                The channel on which the variable was set.

                If missing, the variable is a global variable.
            value:
              description: The new value of the variable.
              type: string
            variable:
              description: The variable that changed.
              type: string
          required:
            - value
            - variable
          type: object
        - $ref: '#/components/schemas/Event'
    ConfigInfo:
      description: Info about Asterisk configuration
      properties:
        default_language:
          description: Default language for media playback.
          type: string
        max_channels:
          description: Maximum number of simultaneous channels.
          format: int32
          type: integer
        max_load:
          description: Maximum load avg on system.
          format: double
          type: number
        max_open_files:
          description: 'Maximum number of open file handles (files, sockets).'
          format: int32
          type: integer
        name:
          description: Asterisk system name.
          type: string
        setid:
          $ref: '#/components/schemas/SetId'
          description: Effective user/group id for running Asterisk.
      required:
        - default_language
        - name
        - setid
      type: object
    ConfigTuple:
      description: A key/value pair that makes up part of a configuration object.
      properties:
        attribute:
          description: A configuration object attribute.
          type: string
        value:
          description: The value for the attribute.
          type: string
      required:
        - attribute
        - value
      type: object
    ContactInfo:
      description: Detailed information about a contact on an endpoint.
      properties:
        aor:
          description: The Address of Record this contact belongs to.
          type: string
        contact_status:
          description: The current status of the contact.
          type: string
        roundtrip_usec:
          description: 'Current round trip time, in microseconds, for the contact.'
          type: string
        uri:
          description: The location of the contact.
          type: string
      required:
        - aor
        - contact_status
        - uri
      type: object
    ContactStatusChange:
      allOf:
        - description: The state of a contact on an endpoint has changed.
          properties:
            contact_info:
              $ref: '#/components/schemas/ContactInfo'
            endpoint:
              $ref: '#/components/schemas/Endpoint'
          required:
            - contact_info
            - endpoint
          type: object
        - $ref: '#/components/schemas/Event'
    DeviceState:
      description: Represents the state of a device.
      properties:
        name:
          description: Name of the device.
          type: string
        state:
          description: Device's state
          type: string
      required:
        - name
        - state
      type: object
    DeviceStateChanged:
      allOf:
        - description: Notification that a device state has changed.
          properties:
            device_state:
              $ref: '#/components/schemas/DeviceState'
              description: Device state object
          required:
            - device_state
          type: object
        - $ref: '#/components/schemas/Event'
    Dial:
      allOf:
        - description: Dialing state has changed.
          properties:
            caller:
              $ref: '#/components/schemas/Channel'
              description: The calling channel.
            dialstatus:
              description: Current status of the dialing attempt to the peer.
              type: string
            dialstring:
              description: The dial string for calling the peer channel.
              type: string
            forward:
              description: Forwarding target requested by the original dialed channel.
              type: string
            forwarded:
              $ref: '#/components/schemas/Channel'
              description: Channel that the caller has been forwarded to.
            peer:
              $ref: '#/components/schemas/Channel'
              description: The dialed channel.
          required:
            - dialstatus
            - peer
          type: object
        - $ref: '#/components/schemas/Event'
    Dialed:
      description: Dialed channel information.
    DialplanCEP:
      description: Dialplan location (context/extension/priority)
      properties:
        app_data:
          description: Parameter of current dialplan application
          type: string
        app_name:
          description: Name of current dialplan application
          type: string
        context:
          description: Context in the dialplan
          type: string
        exten:
          description: Extension in the dialplan
          type: string
        priority:
          description: Priority in the dialplan
          format: int64
          type: integer
      required:
        - app_data
        - app_name
        - context
        - exten
        - priority
      type: object
    Endpoint:
      description: >-
        An external device that may offer/accept calls to/from Asterisk.


        Unlike most resources, which have a single unique identifier, an
        endpoint is uniquely identified by the technology/resource pair.
      properties:
        channel_ids:
          description: Id's of channels associated with this endpoint
          items:
            type: string
          type: array
        resource:
          description: 'Identifier of the endpoint, specific to the given technology.'
          type: string
        state:
          description: Endpoint's state
          type: string
        technology:
          description: Technology of the endpoint
          type: string
      required:
        - channel_ids
        - resource
        - technology
      type: object
    EndpointStateChange:
      allOf:
        - description: Endpoint state changed.
          properties:
            endpoint:
              $ref: '#/components/schemas/Endpoint'
          required:
            - endpoint
          type: object
        - $ref: '#/components/schemas/Event'
    Event:
      allOf:
        - description: Base type for asynchronous events from Asterisk.
          properties:
            application:
              description: Name of the application receiving the event.
              type: string
            timestamp:
              description: Time at which this event was created.
              format: date
              type: string
          required:
            - application
            - timestamp
          type: object
        - $ref: '#/components/schemas/Message'
    FormatLangPair:
      description: Identifies the format and language of a sound file
      properties:
        format:
          type: string
        language:
          type: string
      required:
        - format
        - language
      type: object
    LiveRecording:
      description: A recording that is in progress
      properties:
        cause:
          description: Cause for recording failure if failed
          type: string
        duration:
          description: Duration in seconds of the recording
          format: int32
          type: integer
        format:
          description: 'Recording format (wav, gsm, etc.)'
          type: string
        name:
          description: Base name for the recording
          type: string
        silence_duration:
          description: >-
            Duration of silence, in seconds, detected in the recording. This is
            only available if the recording was initiated with a non-zero
            maxSilenceSeconds.
          format: int32
          type: integer
        state:
          type: string
        talking_duration:
          description: >-
            Duration of talking, in seconds, detected in the recording. This is
            only available if the recording was initiated with a non-zero
            maxSilenceSeconds.
          format: int32
          type: integer
        target_uri:
          description: URI for the channel or bridge being recorded
          type: string
      required:
        - format
        - name
        - state
        - target_uri
      type: object
    LogChannel:
      description: Details of an Asterisk log channel
      properties:
        channel:
          description: The log channel path
          type: string
        configuration:
          description: The various log levels
          type: string
        status:
          description: Whether or not a log type is enabled
          type: string
        type:
          description: Types of logs for the log channel
          type: string
      required:
        - channel
        - configuration
        - status
        - type
      type: object
    Mailbox:
      description: Represents the state of a mailbox.
      properties:
        name:
          description: Name of the mailbox.
          type: string
        new_messages:
          description: Count of new messages in the mailbox.
          format: int32
          type: integer
        old_messages:
          description: Count of old messages in the mailbox.
          format: int32
          type: integer
      required:
        - name
        - new_messages
        - old_messages
      type: object
    Message:
      description: Base type for errors and events
      discriminator:
        propertyName: type
      properties:
        asterisk_id:
          description: The unique ID for the Asterisk instance that raised this event.
          type: string
        type:
          description: Indicates the type of this message.
          type: string
      required:
        - type
      type: object
    MissingParams:
      allOf:
        - description: Error event sent when required params are missing.
          properties:
            params:
              description: A list of the missing parameters
              items:
                type: string
              type: array
          required:
            - params
          type: object
        - $ref: '#/components/schemas/Message'
    Module:
      description: Details of an Asterisk module
      properties:
        description:
          description: The description of this module
          type: string
        name:
          description: The name of this module
          type: string
        status:
          description: The running status of this module
          type: string
        support_level:
          description: The support state of this module
          type: string
        use_count:
          description: The number of times this module is being used
          format: int32
          type: integer
      required:
        - description
        - name
        - status
        - support_level
        - use_count
      type: object
    Peer:
      description: >-
        Detailed information about a remote peer that communicates with
        Asterisk.
      properties:
        address:
          description: The IP address of the peer.
          type: string
        cause:
          description: An optional reason associated with the change in peer_status.
          type: string
        peer_status:
          description: >-
            The current state of the peer. Note that the values of the status
            are dependent on the underlying peer technology.
          type: string
        port:
          description: The port of the peer.
          type: string
        time:
          description: The last known time the peer was contacted.
          type: string
      required:
        - peer_status
      type: object
    PeerStatusChange:
      allOf:
        - description: The state of a peer associated with an endpoint has changed.
          properties:
            endpoint:
              $ref: '#/components/schemas/Endpoint'
            peer:
              $ref: '#/components/schemas/Peer'
          required:
            - endpoint
            - peer
          type: object
        - $ref: '#/components/schemas/Event'
    Playback:
      description: Object representing the playback of media to a channel
      properties:
        id:
          description: ID for this playback operation
          type: string
        language:
          description: >-
            For media types that support multiple languages, the language
            requested for playback.
          type: string
        media_uri:
          description: The URI for the media currently being played back.
          type: string
        next_media_uri:
          description: >-
            If a list of URIs is being played, the next media URI to be played
            back.
          type: string
        state:
          description: Current state of the playback operation.
          type: string
        target_uri:
          description: URI for the channel or bridge to play the media on
          type: string
      required:
        - id
        - media_uri
        - state
        - target_uri
      type: object
    PlaybackContinuing:
      allOf:
        - description: >-
            Event showing the continuation of a media playback operation from
            one media URI to the next in the list.
          properties:
            playback:
              $ref: '#/components/schemas/Playback'
              description: Playback control object
          required:
            - playback
          type: object
        - $ref: '#/components/schemas/Event'
    PlaybackFinished:
      allOf:
        - description: Event showing the completion of a media playback operation.
          properties:
            playback:
              $ref: '#/components/schemas/Playback'
              description: Playback control object
          required:
            - playback
          type: object
        - $ref: '#/components/schemas/Event'
    PlaybackStarted:
      allOf:
        - description: Event showing the start of a media playback operation.
          properties:
            playback:
              $ref: '#/components/schemas/Playback'
              description: Playback control object
          required:
            - playback
          type: object
        - $ref: '#/components/schemas/Event'
    RTPstat:
      description: A statistics of a RTP.
      properties:
        channel_uniqueid:
          description: The Asterisk channel's unique ID that owns this instance.
          type: string
        local_maxjitter:
          description: Maximum jitter on local side.
          format: double
          type: number
        local_maxrxploss:
          description: Maximum number of packets lost on local side.
          format: double
          type: number
        local_minjitter:
          description: Minimum jitter on local side.
          format: double
          type: number
        local_minrxploss:
          description: Minimum number of packets lost on local side.
          format: double
          type: number
        local_normdevjitter:
          description: Average jitter on local side.
          format: double
          type: number
        local_normdevrxploss:
          description: Average number of packets lost on local side.
          format: double
          type: number
        local_ssrc:
          description: Our SSRC.
          format: int32
          type: integer
        local_stdevjitter:
          description: Standard deviation jitter on local side.
          format: double
          type: number
        local_stdevrxploss:
          description: Standard deviation packets lost on local side.
          format: double
          type: number
        maxrtt:
          description: Maximum round trip time.
          format: double
          type: number
        minrtt:
          description: Minimum round trip time.
          format: double
          type: number
        normdevrtt:
          description: Average round trip time.
          format: double
          type: number
        remote_maxjitter:
          description: Maximum jitter on remote side.
          format: double
          type: number
        remote_maxrxploss:
          description: Maximum number of packets lost on remote side.
          format: double
          type: number
        remote_minjitter:
          description: Minimum jitter on remote side.
          format: double
          type: number
        remote_minrxploss:
          description: Minimum number of packets lost on remote side.
          format: double
          type: number
        remote_normdevjitter:
          description: Average jitter on remote side.
          format: double
          type: number
        remote_normdevrxploss:
          description: Average number of packets lost on remote side.
          format: double
          type: number
        remote_ssrc:
          description: Their SSRC.
          format: int32
          type: integer
        remote_stdevjitter:
          description: Standard deviation jitter on remote side.
          format: double
          type: number
        remote_stdevrxploss:
          description: Standard deviation packets lost on remote side.
          format: double
          type: number
        rtt:
          description: Total round trip time.
          format: double
          type: number
        rxcount:
          description: Number of packets received.
          format: int32
          type: integer
        rxjitter:
          description: Jitter on received packets.
          format: double
          type: number
        rxoctetcount:
          description: Number of octets received.
          format: int32
          type: integer
        rxploss:
          description: Number of received packets lost.
          format: int32
          type: integer
        stdevrtt:
          description: Standard deviation round trip time.
          format: double
          type: number
        txcount:
          description: Number of packets transmitted.
          format: int32
          type: integer
        txjitter:
          description: Jitter on transmitted packets.
          format: double
          type: number
        txoctetcount:
          description: Number of octets transmitted.
          format: int32
          type: integer
        txploss:
          description: Number of transmitted packets lost.
          format: int32
          type: integer
      required:
        - channel_uniqueid
        - local_ssrc
        - remote_ssrc
        - rxcount
        - rxoctetcount
        - rxploss
        - txcount
        - txoctetcount
        - txploss
      type: object
    RecordingFailed:
      allOf:
        - description: Event showing failure of a recording operation.
          properties:
            recording:
              $ref: '#/components/schemas/LiveRecording'
              description: Recording control object
          required:
            - recording
          type: object
        - $ref: '#/components/schemas/Event'
    RecordingFinished:
      allOf:
        - description: Event showing the completion of a recording operation.
          properties:
            recording:
              $ref: '#/components/schemas/LiveRecording'
              description: Recording control object
          required:
            - recording
          type: object
        - $ref: '#/components/schemas/Event'
    RecordingStarted:
      allOf:
        - description: Event showing the start of a recording operation.
          properties:
            recording:
              $ref: '#/components/schemas/LiveRecording'
              description: Recording control object
          required:
            - recording
          type: object
        - $ref: '#/components/schemas/Event'
    SetId:
      description: Effective user/group id
      properties:
        group:
          description: Effective group id.
          type: string
        user:
          description: Effective user id.
          type: string
      required:
        - group
        - user
      type: object
    Sound:
      description: A media file that may be played back.
      properties:
        formats:
          description: The formats and languages in which this sound is available.
          items:
            $ref: '#/components/schemas/FormatLangPair'
          type: array
        id:
          description: Sound's identifier.
          type: string
        text:
          description: 'Text description of the sound, usually the words spoken.'
          type: string
      required:
        - formats
        - id
      type: object
    StasisEnd:
      allOf:
        - description: Notification that a channel has left a Stasis application.
          properties:
            channel:
              $ref: '#/components/schemas/Channel'
          required:
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    StasisStart:
      allOf:
        - description: Notification that a channel has entered a Stasis application.
          properties:
            args:
              description: Arguments to the application
              items:
                type: string
              type: array
            channel:
              $ref: '#/components/schemas/Channel'
            replace_channel:
              $ref: '#/components/schemas/Channel'
          required:
            - args
            - channel
          type: object
        - $ref: '#/components/schemas/Event'
    StatusInfo:
      description: Info about Asterisk status
      properties:
        last_reload_time:
          description: Time when Asterisk was last reloaded.
          format: date
          type: string
        startup_time:
          description: Time when Asterisk was started.
          format: date
          type: string
      required:
        - last_reload_time
        - startup_time
      type: object
    StoredRecording:
      description: A past recording that may be played back.
      properties:
        format:
          type: string
        name:
          type: string
      required:
        - format
        - name
      type: object
    SystemInfo:
      description: Info about Asterisk
      properties:
        entity_id:
          type: string
        version:
          description: Asterisk version.
          type: string
      required:
        - entity_id
        - version
      type: object
    TextMessage:
      description: A text message.
      properties:
        body:
          description: The text of the message.
          type: string
        from:
          description: >-
            A technology specific URI specifying the source of the message. For
            sip and pjsip technologies, any SIP URI can be specified. For xmpp,
            the URI must correspond to the client connection being used to send
            the message.
          type: string
        to:
          description: >-
            A technology specific URI specifying the destination of the message.
            Valid technologies include sip, pjsip, and xmp. The destination of a
            message should be an endpoint.
          type: string
        variables:
          description: >-
            Technology specific key/value pairs (JSON object) associated with
            the message.
          type: object
      required:
        - body
        - from
        - to
      type: object
    TextMessageReceived:
      allOf:
        - description: A text message was received from an endpoint.
          properties:
            endpoint:
              $ref: '#/components/schemas/Endpoint'
            message:
              $ref: '#/components/schemas/TextMessage'
          required:
            - message
          type: object
        - $ref: '#/components/schemas/Event'
    Variable:
      description: The value of a channel variable
      properties:
        value:
          description: The value of the variable requested
          type: string
      required:
        - value
      type: object
    binary:
      description: random string
      type: string
    containers:
      description: random dict
      properties:
        additionalProperties: {}
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
info:
  title: 'localhost:8088'
  version: 5.1.1
openapi: 3.0.0
paths:
  /applications:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: No response was specified
      summary: List all applications.
      tags:
        - applications
  '/applications/{applicationName}':
    get:
      parameters:
        - description: Application's name
          in: path
          name: applicationName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Application'
          description: No response was specified
      summary: Get details of an application.
      tags:
        - applications
  '/applications/{applicationName}/eventFilter':
    put:
      description: >-
        Allowed and/or disallowed event type filtering can be done. The body
        (parameter) should specify a JSON key/value object that describes the
        type of event filtering needed. One, or both of the following keys can
        be designated:<br /><br />"allowed" - Specifies an allowed list of event
        types<br />"disallowed" - Specifies a disallowed list of event types<br
        /><br />Further, each of those key's value should be a JSON array that
        holds zero, or more JSON key/value objects. Each of these objects must
        contain the following key with an associated value:<br /><br />"type" -
        The type name of the event to filter<br /><br />The value must be the
        string name (case sensitive) of the event type that needs filtering. For
        example:<br /><br />{ "allowed": [ { "type": "StasisStart" }, { "type":
        "StasisEnd" } ] }<br /><br />As this specifies only an allowed list,
        then only those two event type messages are sent to the application. No
        other event messages are sent.<br /><br />The following rules apply:<br
        /><br />* If the body is empty, both the allowed and disallowed filters
        are set empty.<br />* If both list types are given then both are set to
        their respective values (note, specifying an empty array for a given
        type sets that type to empty).<br />* If only one list type is given
        then only that type is set. The other type is not updated.<br />* An
        empty "allowed" list means all events are allowed.<br />* An empty
        "disallowed" list means no events are disallowed.<br />* Disallowed
        events take precedence over allowed events if the event type is
        specified in both lists.
      parameters:
        - description: Application's name
          in: path
          name: applicationName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Specify which event types to allow/disallow
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Application'
          description: No response was specified
      summary: Filter application events types.
      tags:
        - applications
  '/applications/{applicationName}/subscription':
    delete:
      description: >-
        Returns the state of the application after the subscriptions have
        changed
      parameters:
        - description: Application's name
          in: path
          name: applicationName
          required: true
          schema:
            type: string
        - description: >-
            URI for event source (channel:{channelId}, bridge:{bridgeId},
            endpoint:{tech}[/{resource}], deviceState:{deviceName}
          in: query
          name: eventSource
          required: true
          schema:
            items:
              type: string
            type: array
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Application'
          description: No response was specified
      summary: Unsubscribe an application from an event source.
      tags:
        - applications
    post:
      description: >-
        Returns the state of the application after the subscriptions have
        changed
      parameters:
        - description: Application's name
          in: path
          name: applicationName
          required: true
          schema:
            type: string
        - description: >-
            URI for event source (channel:{channelId}, bridge:{bridgeId},
            endpoint:{tech}[/{resource}], deviceState:{deviceName}
          in: query
          name: eventSource
          required: true
          schema:
            items:
              type: string
            type: array
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Application'
          description: No response was specified
      summary: Subscribe an application to a event source.
      tags:
        - applications
  '/asterisk/config/dynamic/{configClass}/{objectType}/{id}':
    delete:
      parameters:
        - description: The configuration class containing dynamic configuration objects.
          in: path
          name: configClass
          required: true
          schema:
            type: string
        - description: The type of configuration object to delete.
          in: path
          name: objectType
          required: true
          schema:
            type: string
        - description: The unique identifier of the object to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Delete a dynamic configuration object.
      tags:
        - asterisk
    get:
      parameters:
        - description: The configuration class containing dynamic configuration objects.
          in: path
          name: configClass
          required: true
          schema:
            type: string
        - description: The type of configuration object to retrieve.
          in: path
          name: objectType
          required: true
          schema:
            type: string
        - description: The unique identifier of the object to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ConfigTuple'
                type: array
          description: No response was specified
      summary: Retrieve a dynamic configuration object.
      tags:
        - asterisk
    put:
      parameters:
        - description: The configuration class containing dynamic configuration objects.
          in: path
          name: configClass
          required: true
          schema:
            type: string
        - description: The type of configuration object to create or update.
          in: path
          name: objectType
          required: true
          schema:
            type: string
        - description: The unique identifier of the object to create or update.
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containers'
        description: >-
          The body object should have a value that is a list of ConfigTuples,
          which provide the fields to update. Ex. [ { "attribute":
          "directmedia", "value": "false" } ]
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ConfigTuple'
                type: array
          description: No response was specified
      summary: Create or update a dynamic configuration object.
      tags:
        - asterisk
  /asterisk/info:
    get:
      parameters:
        - description: Filter information returned
          in: query
          name: only
          required: false
          schema:
            items:
              type: string
            type: array
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AsteriskInfo'
          description: No response was specified
      summary: Gets Asterisk system information.
      tags:
        - asterisk
  /asterisk/logging:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/LogChannel'
                type: array
          description: No response was specified
      summary: Gets Asterisk log channel information.
      tags:
        - asterisk
  '/asterisk/logging/{logChannelName}':
    delete:
      parameters:
        - description: Log channels name
          in: path
          name: logChannelName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Deletes a log channel.
      tags:
        - asterisk
    post:
      parameters:
        - description: The log channel to add
          in: path
          name: logChannelName
          required: true
          schema:
            type: string
        - description: levels of the log channel
          in: query
          name: configuration
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Adds a log channel.
      tags:
        - asterisk
  '/asterisk/logging/{logChannelName}/rotate':
    put:
      parameters:
        - description: Log channel's name
          in: path
          name: logChannelName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Rotates a log channel.
      tags:
        - asterisk
  /asterisk/modules:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Module'
                type: array
          description: No response was specified
      summary: List Asterisk modules.
      tags:
        - asterisk
  '/asterisk/modules/{moduleName}':
    delete:
      parameters:
        - description: Module's name
          in: path
          name: moduleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Unload an Asterisk module.
      tags:
        - asterisk
    get:
      parameters:
        - description: Module's name
          in: path
          name: moduleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Module'
          description: No response was specified
      summary: Get Asterisk module information.
      tags:
        - asterisk
    post:
      parameters:
        - description: Module's name
          in: path
          name: moduleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Load an Asterisk module.
      tags:
        - asterisk
    put:
      parameters:
        - description: Module's name
          in: path
          name: moduleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Reload an Asterisk module.
      tags:
        - asterisk
  /asterisk/ping:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AsteriskPing'
          description: No response was specified
      summary: Response pong message.
      tags:
        - asterisk
  /asterisk/variable:
    get:
      parameters:
        - description: The variable to get
          in: query
          name: variable
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Variable'
          description: No response was specified
      summary: Get the value of a global variable.
      tags:
        - asterisk
    post:
      parameters:
        - description: The variable to set
          in: query
          name: variable
          required: true
          schema:
            type: string
        - description: The value to set the variable to
          in: query
          name: value
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Set the value of a global variable.
      tags:
        - asterisk
  /bridges:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Bridge'
                type: array
          description: No response was specified
      summary: List all active bridges in Asterisk.
      tags:
        - bridges
    post:
      description: >-
        This bridge persists until it has been shut down, or Asterisk has been
        shut down.
      parameters:
        - description: >-
            Comma separated list of bridge type attributes (mixing, holding,
            dtmf_events, proxy_media, video_sfu).
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: Unique ID to give to the bridge being created.
          in: query
          name: bridgeId
          required: false
          schema:
            type: string
        - description: Name to give to the bridge being created.
          in: query
          name: name
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Bridge'
          description: No response was specified
      summary: Create a new bridge.
      tags:
        - bridges
  '/bridges/{bridgeId}':
    delete:
      description: >-
        If any channels are in this bridge, they will be removed and resume
        whatever they were doing beforehand.
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Shut down a bridge.
      tags:
        - bridges
    get:
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Bridge'
          description: No response was specified
      summary: Get bridge details.
      tags:
        - bridges
    post:
      description: >-
        This bridge persists until it has been shut down, or Asterisk has been
        shut down.
      parameters:
        - description: >-
            Comma separated list of bridge type attributes (mixing, holding,
            dtmf_events, proxy_media, video_sfu) to set.
          in: query
          name: type
          required: false
          schema:
            type: string
        - description: Unique ID to give to the bridge being created.
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - description: Set the name of the bridge.
          in: query
          name: name
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Bridge'
          description: No response was specified
      summary: Create a new bridge or updates an existing one.
      tags:
        - bridges
  '/bridges/{bridgeId}/addChannel':
    post:
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - description: Ids of channels to add to bridge
          in: query
          name: channel
          required: true
          schema:
            items:
              type: string
            type: array
        - description: Channel's role in the bridge
          in: query
          name: role
          required: false
          schema:
            type: string
        - description: >-
            Absorb DTMF coming from this channel, preventing it to pass through
            to the bridge
          in: query
          name: absorbDTMF
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            Mute audio from this channel, preventing it to pass through to the
            bridge
          in: query
          name: mute
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Add a channel to a bridge.
      tags:
        - bridges
  '/bridges/{bridgeId}/moh':
    delete:
      description: >-
        This will only stop music on hold being played via POST
        bridges/{bridgeId}/moh.
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Stop playing music on hold to a bridge.
      tags:
        - bridges
    post:
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - description: Channel's id
          in: query
          name: mohClass
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Play music on hold to a bridge or change the MOH class that is playing.
      tags:
        - bridges
  '/bridges/{bridgeId}/play':
    post:
      description: >-
        The media URI may be any of a number of URI's. Currently sound:,
        recording:, number:, digits:, characters:, and tone: URI's are
        supported. This operation creates a playback resource that can be used
        to control the playback of media (pause, rewind, fast forward, etc.)
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - description: Media URIs to play.
          in: query
          name: media
          required: true
          schema:
            items:
              type: string
            type: array
        - description: 'For sounds, selects language for sound.'
          in: query
          name: lang
          required: false
          schema:
            type: string
        - description: >-
            Number of milliseconds to skip before playing. Only applies to the
            first URI if multiple media URIs are specified.
          in: query
          name: offsetms
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Number of milliseconds to skip for forward/reverse operations.
          in: query
          name: skipms
          required: false
          schema:
            default: 3000
            format: int32
            type: integer
        - description: Playback Id.
          in: query
          name: playbackId
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Playback'
          description: No response was specified
      summary: Start playback of media on a bridge.
      tags:
        - bridges
  '/bridges/{bridgeId}/play/{playbackId}':
    post:
      description: >-
        The media URI may be any of a number of URI's. Currently sound:,
        recording:, number:, digits:, characters:, and tone: URI's are
        supported. This operation creates a playback resource that can be used
        to control the playback of media (pause, rewind, fast forward, etc.)
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - description: Playback ID.
          in: path
          name: playbackId
          required: true
          schema:
            type: string
        - description: Media URIs to play.
          in: query
          name: media
          required: true
          schema:
            items:
              type: string
            type: array
        - description: 'For sounds, selects language for sound.'
          in: query
          name: lang
          required: false
          schema:
            type: string
        - description: >-
            Number of milliseconds to skip before playing. Only applies to the
            first URI if multiple media URIs are specified.
          in: query
          name: offsetms
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Number of milliseconds to skip for forward/reverse operations.
          in: query
          name: skipms
          required: false
          schema:
            default: 3000
            format: int32
            type: integer
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Playback'
          description: No response was specified
      summary: Start playback of media on a bridge.
      tags:
        - bridges
  '/bridges/{bridgeId}/record':
    post:
      description: >-
        This records the mixed audio from all channels participating in this
        bridge.
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - description: Recording's filename
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Format to encode audio in
          in: query
          name: format
          required: true
          schema:
            type: string
        - description: 'Maximum duration of the recording, in seconds. 0 for no limit.'
          in: query
          name: maxDurationSeconds
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: 'Maximum duration of silence, in seconds. 0 for no limit.'
          in: query
          name: maxSilenceSeconds
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Action to take if a recording with the same name already exists.
          in: query
          name: ifExists
          required: false
          schema:
            default: fail
            type: string
        - description: Play beep when recording begins
          in: query
          name: beep
          required: false
          schema:
            default: false
            type: boolean
        - description: DTMF input to terminate recording.
          in: query
          name: terminateOn
          required: false
          schema:
            default: none
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LiveRecording'
          description: No response was specified
      summary: Start a recording.
      tags:
        - bridges
  '/bridges/{bridgeId}/removeChannel':
    post:
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - description: Ids of channels to remove from bridge
          in: query
          name: channel
          required: true
          schema:
            items:
              type: string
            type: array
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Remove a channel from a bridge.
      tags:
        - bridges
  '/bridges/{bridgeId}/videoSource':
    delete:
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: >-
        Removes any explicit video source in a multi-party mixing bridge. This
        operation has no effect on bridges with two or fewer participants. When
        no explicit video source is set, talk detection will be used to
        determine the active video stream.
      tags:
        - bridges
  '/bridges/{bridgeId}/videoSource/{channelId}':
    post:
      parameters:
        - description: Bridge's id
          in: path
          name: bridgeId
          required: true
          schema:
            type: string
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: >-
        Set a channel as the video source in a multi-party mixing bridge. This
        operation has no effect on bridges with two or fewer participants.
      tags:
        - bridges
  /channels:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Channel'
                type: array
          description: No response was specified
      summary: List all active channels in Asterisk.
      tags:
        - channels
    post:
      description: >-
        The new channel is created immediately and a snapshot of it returned. If
        a Stasis application is provided it will be automatically subscribed to
        the originated channel for further events and updates.
      parameters:
        - description: Endpoint to call.
          in: query
          name: endpoint
          required: true
          schema:
            type: string
        - description: >-
            The extension to dial after the endpoint answers. Mutually exclusive
            with 'app'.
          in: query
          name: extension
          required: false
          schema:
            type: string
        - description: >-
            The context to dial after the endpoint answers. If omitted, uses
            'default'. Mutually exclusive with 'app'.
          in: query
          name: context
          required: false
          schema:
            type: string
        - description: >-
            The priority to dial after the endpoint answers. If omitted, uses 1.
            Mutually exclusive with 'app'.
          in: query
          name: priority
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            The label to dial after the endpoint answers. Will supersede
            'priority' if provided. Mutually exclusive with 'app'.
          in: query
          name: label
          required: false
          schema:
            type: string
        - description: >-
            The application that is subscribed to the originated channel. When
            the channel is answered, it will be passed to this Stasis
            application. Mutually exclusive with 'context', 'extension',
            'priority', and 'label'.
          in: query
          name: app
          required: false
          schema:
            type: string
        - description: >-
            The application arguments to pass to the Stasis application provided
            by 'app'. Mutually exclusive with 'context', 'extension',
            'priority', and 'label'.
          in: query
          name: appArgs
          required: false
          schema:
            type: string
        - description: CallerID to use when dialing the endpoint or extension.
          in: query
          name: callerId
          required: false
          schema:
            type: string
        - description: 'Timeout (in seconds) before giving up dialing, or -1 for no timeout.'
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
        - description: The unique id to assign the channel on creation.
          in: query
          name: channelId
          required: false
          schema:
            type: string
        - description: >-
            The unique id to assign the second channel when using local
            channels.
          in: query
          name: otherChannelId
          required: false
          schema:
            type: string
        - description: The unique id of the channel which is originating this one.
          in: query
          name: originator
          required: false
          schema:
            type: string
        - description: >-
            The format name capability list to use if originator is not
            specified. Ex. "ulaw,slin16".  Format names can be found with "core
            show codecs".
          in: query
          name: formats
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        $ref: '#/components/requestBodies/containers'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Channel'
          description: No response was specified
      summary: Create a new channel (originate).
      tags:
        - channels
  /channels/create:
    post:
      parameters:
        - description: Endpoint for channel communication
          in: query
          name: endpoint
          required: true
          schema:
            type: string
        - description: Stasis Application to place channel into
          in: query
          name: app
          required: true
          schema:
            type: string
        - description: >-
            The application arguments to pass to the Stasis application provided
            by 'app'. Mutually exclusive with 'context', 'extension',
            'priority', and 'label'.
          in: query
          name: appArgs
          required: false
          schema:
            type: string
        - description: The unique id to assign the channel on creation.
          in: query
          name: channelId
          required: false
          schema:
            type: string
        - description: >-
            The unique id to assign the second channel when using local
            channels.
          in: query
          name: otherChannelId
          required: false
          schema:
            type: string
        - description: Unique ID of the calling channel
          in: query
          name: originator
          required: false
          schema:
            type: string
        - description: >-
            The format name capability list to use if originator is not
            specified. Ex. "ulaw,slin16".  Format names can be found with "core
            show codecs".
          in: query
          name: formats
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        $ref: '#/components/requestBodies/containers'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Channel'
          description: No response was specified
      summary: Create channel.
      tags:
        - channels
  /channels/externalMedia:
    post:
      description: Create a channel to an External Media source/sink.
      parameters:
        - description: The unique id to assign the channel on creation.
          in: query
          name: channelId
          required: false
          schema:
            type: string
        - description: Stasis Application to place channel into
          in: query
          name: app
          required: true
          schema:
            type: string
        - description: 'Hostname/ip:port of external host'
          in: query
          name: external_host
          required: true
          schema:
            type: string
        - description: Payload encapsulation protocol
          in: query
          name: encapsulation
          required: false
          schema:
            default: rtp
            type: string
        - description: Transport protocol
          in: query
          name: transport
          required: false
          schema:
            default: udp
            type: string
        - description: Connection type (client/server)
          in: query
          name: connection_type
          required: false
          schema:
            default: client
            type: string
        - description: Format to encode audio in
          in: query
          name: format
          required: true
          schema:
            type: string
        - description: External media direction
          in: query
          name: direction
          required: false
          schema:
            default: both
            type: string
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        $ref: '#/components/requestBodies/containers'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Channel'
          description: No response was specified
      summary: Start an External Media session.
      tags:
        - channels
  '/channels/{channelId}':
    delete:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: >-
            The reason code for hanging up the channel for detail use. Mutually
            exclusive with 'reason'. See detail hangup codes at here.
            https://wiki.asterisk.org/wiki/display/AST/Hangup+Cause+Mappings
          in: query
          name: reason_code
          required: false
          schema:
            type: string
        - description: >-
            Reason for hanging up the channel for simple use. Mutually exclusive
            with 'reason_code'.
          in: query
          name: reason
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Delete (i.e. hangup) a channel.
      tags:
        - channels
    get:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Channel'
          description: No response was specified
      summary: Channel details.
      tags:
        - channels
    post:
      description: >-
        The new channel is created immediately and a snapshot of it returned. If
        a Stasis application is provided it will be automatically subscribed to
        the originated channel for further events and updates.
      parameters:
        - description: The unique id to assign the channel on creation.
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Endpoint to call.
          in: query
          name: endpoint
          required: true
          schema:
            type: string
        - description: >-
            The extension to dial after the endpoint answers. Mutually exclusive
            with 'app'.
          in: query
          name: extension
          required: false
          schema:
            type: string
        - description: >-
            The context to dial after the endpoint answers. If omitted, uses
            'default'. Mutually exclusive with 'app'.
          in: query
          name: context
          required: false
          schema:
            type: string
        - description: >-
            The priority to dial after the endpoint answers. If omitted, uses 1.
            Mutually exclusive with 'app'.
          in: query
          name: priority
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            The label to dial after the endpoint answers. Will supersede
            'priority' if provided. Mutually exclusive with 'app'.
          in: query
          name: label
          required: false
          schema:
            type: string
        - description: >-
            The application that is subscribed to the originated channel. When
            the channel is answered, it will be passed to this Stasis
            application. Mutually exclusive with 'context', 'extension',
            'priority', and 'label'.
          in: query
          name: app
          required: false
          schema:
            type: string
        - description: >-
            The application arguments to pass to the Stasis application provided
            by 'app'. Mutually exclusive with 'context', 'extension',
            'priority', and 'label'.
          in: query
          name: appArgs
          required: false
          schema:
            type: string
        - description: CallerID to use when dialing the endpoint or extension.
          in: query
          name: callerId
          required: false
          schema:
            type: string
        - description: 'Timeout (in seconds) before giving up dialing, or -1 for no timeout.'
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
        - description: >-
            The unique id to assign the second channel when using local
            channels.
          in: query
          name: otherChannelId
          required: false
          schema:
            type: string
        - description: The unique id of the channel which is originating this one.
          in: query
          name: originator
          required: false
          schema:
            type: string
        - description: >-
            The format name capability list to use if originator is not
            specified. Ex. "ulaw,slin16".  Format names can be found with "core
            show codecs".
          in: query
          name: formats
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containers'
        description: >-
          The "variables" key in the body object holds variable key/value pairs
          to set on the channel on creation. Other keys in the body object are
          interpreted as query parameters. Ex. { "endpoint": "SIP/Alice",
          "variables": { "CALLERID(name)": "Alice" } }
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Channel'
          description: No response was specified
      summary: Create a new channel (originate with id).
      tags:
        - channels
  '/channels/{channelId}/answer':
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Answer a channel.
      tags:
        - channels
  '/channels/{channelId}/continue':
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: The context to continue to.
          in: query
          name: context
          required: false
          schema:
            type: string
        - description: The extension to continue to.
          in: query
          name: extension
          required: false
          schema:
            type: string
        - description: The priority to continue to.
          in: query
          name: priority
          required: false
          schema:
            format: int32
            type: integer
        - description: >-
            The label to continue to - will supersede 'priority' if both are
            provided.
          in: query
          name: label
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Exit application; continue execution in the dialplan.
      tags:
        - channels
  '/channels/{channelId}/dial':
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Channel ID of caller
          in: query
          name: caller
          required: false
          schema:
            type: string
        - description: Dial timeout
          in: query
          name: timeout
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Dial a created channel.
      tags:
        - channels
  '/channels/{channelId}/dtmf':
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: DTMF To send.
          in: query
          name: dtmf
          required: false
          schema:
            type: string
        - description: >-
            Amount of time to wait before DTMF digits (specified in
            milliseconds) start.
          in: query
          name: before
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Amount of time in between DTMF digits (specified in milliseconds).
          in: query
          name: between
          required: false
          schema:
            default: 100
            format: int32
            type: integer
        - description: Length of each DTMF digit (specified in milliseconds).
          in: query
          name: duration
          required: false
          schema:
            default: 100
            format: int32
            type: integer
        - description: >-
            Amount of time to wait after DTMF digits (specified in milliseconds)
            end.
          in: query
          name: after
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Send provided DTMF to a given channel.
      tags:
        - channels
  '/channels/{channelId}/hold':
    delete:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Remove a channel from hold.
      tags:
        - channels
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Hold a channel.
      tags:
        - channels
  '/channels/{channelId}/moh':
    delete:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Stop playing music on hold to a channel.
      tags:
        - channels
    post:
      description: >-
        Using media operations such as /play on a channel playing MOH in this
        manner will suspend MOH without resuming automatically. If continuing
        music on hold is desired, the stasis application must reinitiate music
        on hold.
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Music on hold class to use
          in: query
          name: mohClass
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Play music on hold to a channel.
      tags:
        - channels
  '/channels/{channelId}/move':
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: The channel will be passed to this Stasis application.
          in: query
          name: app
          required: true
          schema:
            type: string
        - description: >-
            The application arguments to pass to the Stasis application provided
            by 'app'.
          in: query
          name: appArgs
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Move the channel from one Stasis application to another.
      tags:
        - channels
  '/channels/{channelId}/mute':
    delete:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Direction in which to unmute audio
          in: query
          name: direction
          required: false
          schema:
            default: both
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Unmute a channel.
      tags:
        - channels
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Direction in which to mute audio
          in: query
          name: direction
          required: false
          schema:
            default: both
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Mute a channel.
      tags:
        - channels
  '/channels/{channelId}/play':
    post:
      description: >-
        The media URI may be any of a number of URI's. Currently sound:,
        recording:, number:, digits:, characters:, and tone: URI's are
        supported. This operation creates a playback resource that can be used
        to control the playback of media (pause, rewind, fast forward, etc.)
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Media URIs to play.
          in: query
          name: media
          required: true
          schema:
            items:
              type: string
            type: array
        - description: 'For sounds, selects language for sound.'
          in: query
          name: lang
          required: false
          schema:
            type: string
        - description: >-
            Number of milliseconds to skip before playing. Only applies to the
            first URI if multiple media URIs are specified.
          in: query
          name: offsetms
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of milliseconds to skip for forward/reverse operations.
          in: query
          name: skipms
          required: false
          schema:
            default: 3000
            format: int32
            type: integer
        - description: Playback ID.
          in: query
          name: playbackId
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Playback'
          description: No response was specified
      summary: Start playback of media.
      tags:
        - channels
  '/channels/{channelId}/play/{playbackId}':
    post:
      description: >-
        The media URI may be any of a number of URI's. Currently sound:,
        recording:, number:, digits:, characters:, and tone: URI's are
        supported. This operation creates a playback resource that can be used
        to control the playback of media (pause, rewind, fast forward, etc.)
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Playback ID.
          in: path
          name: playbackId
          required: true
          schema:
            type: string
        - description: Media URIs to play.
          in: query
          name: media
          required: true
          schema:
            items:
              type: string
            type: array
        - description: 'For sounds, selects language for sound.'
          in: query
          name: lang
          required: false
          schema:
            type: string
        - description: >-
            Number of milliseconds to skip before playing. Only applies to the
            first URI if multiple media URIs are specified.
          in: query
          name: offsetms
          required: false
          schema:
            format: int32
            type: integer
        - description: Number of milliseconds to skip for forward/reverse operations.
          in: query
          name: skipms
          required: false
          schema:
            default: 3000
            format: int32
            type: integer
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Playback'
          description: No response was specified
      summary: Start playback of media and specify the playbackId.
      tags:
        - channels
  '/channels/{channelId}/record':
    post:
      description: >-
        Record audio from a channel. Note that this will not capture audio sent
        to the channel. The bridge itself has a record feature if that's what
        you want.
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Recording's filename
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Format to encode audio in
          in: query
          name: format
          required: true
          schema:
            type: string
        - description: 'Maximum duration of the recording, in seconds. 0 for no limit'
          in: query
          name: maxDurationSeconds
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: 'Maximum duration of silence, in seconds. 0 for no limit'
          in: query
          name: maxSilenceSeconds
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: Action to take if a recording with the same name already exists.
          in: query
          name: ifExists
          required: false
          schema:
            default: fail
            type: string
        - description: Play beep when recording begins
          in: query
          name: beep
          required: false
          schema:
            default: false
            type: boolean
        - description: DTMF input to terminate recording
          in: query
          name: terminateOn
          required: false
          schema:
            default: none
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LiveRecording'
          description: No response was specified
      summary: Start a recording.
      tags:
        - channels
  '/channels/{channelId}/redirect':
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: The endpoint to redirect the channel to
          in: query
          name: endpoint
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Redirect the channel to a different location.
      tags:
        - channels
  '/channels/{channelId}/ring':
    delete:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Stop ringing indication on a channel if locally generated.
      tags:
        - channels
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Indicate ringing to a channel.
      tags:
        - channels
  '/channels/{channelId}/rtp_statistics':
    get:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RTPstat'
          description: No response was specified
      summary: RTP stats on a channel.
      tags:
        - channels
  '/channels/{channelId}/silence':
    delete:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Stop playing silence to a channel.
      tags:
        - channels
    post:
      description: >-
        Using media operations such as /play on a channel playing silence in
        this manner will suspend silence without resuming automatically.
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Play silence to a channel.
      tags:
        - channels
  '/channels/{channelId}/snoop':
    post:
      description: Snoop (spy/whisper) on a specific channel.
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Direction of audio to spy on
          in: query
          name: spy
          required: false
          schema:
            default: none
            type: string
        - description: Direction of audio to whisper into
          in: query
          name: whisper
          required: false
          schema:
            default: none
            type: string
        - description: Application the snooping channel is placed into
          in: query
          name: app
          required: true
          schema:
            type: string
        - description: The application arguments to pass to the Stasis application
          in: query
          name: appArgs
          required: false
          schema:
            type: string
        - description: Unique ID to assign to snooping channel
          in: query
          name: snoopId
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Channel'
          description: No response was specified
      summary: Start snooping.
      tags:
        - channels
  '/channels/{channelId}/snoop/{snoopId}':
    post:
      description: Snoop (spy/whisper) on a specific channel.
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Unique ID to assign to snooping channel
          in: path
          name: snoopId
          required: true
          schema:
            type: string
        - description: Direction of audio to spy on
          in: query
          name: spy
          required: false
          schema:
            default: none
            type: string
        - description: Direction of audio to whisper into
          in: query
          name: whisper
          required: false
          schema:
            default: none
            type: string
        - description: Application the snooping channel is placed into
          in: query
          name: app
          required: true
          schema:
            type: string
        - description: The application arguments to pass to the Stasis application
          in: query
          name: appArgs
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Channel'
          description: No response was specified
      summary: Start snooping.
      tags:
        - channels
  '/channels/{channelId}/variable':
    get:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: The channel variable or function to get
          in: query
          name: variable
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Variable'
          description: No response was specified
      summary: Get the value of a channel variable or function.
      tags:
        - channels
    post:
      parameters:
        - description: Channel's id
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: The channel variable or function to set
          in: query
          name: variable
          required: true
          schema:
            type: string
        - description: The value to set the variable to
          in: query
          name: value
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Set the value of a channel variable or function.
      tags:
        - channels
  /deviceStates:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/DeviceState'
                type: array
          description: No response was specified
      summary: List all ARI controlled device states.
      tags:
        - deviceStates
  '/deviceStates/{deviceName}':
    delete:
      parameters:
        - description: Name of the device
          in: path
          name: deviceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Destroy a device-state controlled by ARI.
      tags:
        - deviceStates
    get:
      parameters:
        - description: Name of the device
          in: path
          name: deviceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceState'
          description: No response was specified
      summary: Retrieve the current state of a device.
      tags:
        - deviceStates
    put:
      parameters:
        - description: Name of the device
          in: path
          name: deviceName
          required: true
          schema:
            type: string
        - description: Device state value
          in: query
          name: deviceState
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: >-
        Change the state of a device controlled by ARI. (Note - implicitly
        creates the device state).
      tags:
        - deviceStates
  /endpoints:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Endpoint'
                type: array
          description: No response was specified
      summary: List all endpoints.
      tags:
        - endpoints
  /endpoints/sendMessage:
    put:
      parameters:
        - description: >-
            The endpoint resource or technology specific URI to send the message
            to. Valid resources are sip, pjsip, and xmpp.
          in: query
          name: to
          required: true
          schema:
            type: string
        - description: >-
            The endpoint resource or technology specific identity to send this
            message from. Valid resources are sip, pjsip, and xmpp.
          in: query
          name: from
          required: true
          schema:
            type: string
        - description: The body of the message
          in: query
          name: body
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        $ref: '#/components/requestBodies/containers2'
      responses:
        '200':
          description: No response was specified
      summary: Send a message to some technology URI or endpoint.
      tags:
        - endpoints
  '/endpoints/{tech}':
    get:
      parameters:
        - description: 'Technology of the endpoints (sip,iax2,...)'
          in: path
          name: tech
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Endpoint'
                type: array
          description: No response was specified
      summary: List available endoints for a given endpoint technology.
      tags:
        - endpoints
  '/endpoints/{tech}/{resource}':
    get:
      parameters:
        - description: Technology of the endpoint
          in: path
          name: tech
          required: true
          schema:
            type: string
        - description: ID of the endpoint
          in: path
          name: resource
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Endpoint'
          description: No response was specified
      summary: Details for an endpoint.
      tags:
        - endpoints
  '/endpoints/{tech}/{resource}/sendMessage':
    put:
      parameters:
        - description: Technology of the endpoint
          in: path
          name: tech
          required: true
          schema:
            type: string
        - description: ID of the endpoint
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: >-
            The endpoint resource or technology specific identity to send this
            message from. Valid resources are sip, pjsip, and xmpp.
          in: query
          name: from
          required: true
          schema:
            type: string
        - description: The body of the message
          in: query
          name: body
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containers'
      responses:
        '200':
          description: No response was specified
      summary: Send a message to some endpoint in a technology.
      tags:
        - endpoints
  /events:
    get:
      parameters:
        - description: Applications to subscribe to.
          in: query
          name: app
          required: true
          schema:
            items:
              type: string
            type: array
        - description: >-
            Subscribe to all Asterisk events. If provided, the applications
            listed will be subscribed to all events, effectively disabling the
            application specific subscriptions. Default is 'false'.
          in: query
          name: subscribeAll
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
          description: No response was specified
      summary: WebSocket connection for events.
      tags:
        - events
  '/events/user/{eventName}':
    post:
      parameters:
        - description: Event name
          in: path
          name: eventName
          required: true
          schema:
            type: string
        - description: The name of the application that will receive this event
          in: query
          name: application
          required: true
          schema:
            type: string
        - description: >-
            URI for event source (channel:{channelId}, bridge:{bridgeId},
            endpoint:{tech}/{resource}, deviceState:{deviceName}
          in: query
          name: source
          required: false
          schema:
            items:
              type: string
            type: array
        - $ref: '#/components/parameters/asteriskID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containers'
        description: >-
          The "variables" key in the body object holds custom key/value pairs to
          add to the user event. Ex. { "variables": { "key": "value" } }
      responses:
        '200':
          description: No response was specified
      summary: Generate a user event.
      tags:
        - events
  /mailboxes:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Mailbox'
                type: array
          description: No response was specified
      summary: List all mailboxes.
      tags:
        - mailboxes
  '/mailboxes/{mailboxName}':
    delete:
      parameters:
        - description: Name of the mailbox
          in: path
          name: mailboxName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Destroy a mailbox.
      tags:
        - mailboxes
    get:
      parameters:
        - description: Name of the mailbox
          in: path
          name: mailboxName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Mailbox'
          description: No response was specified
      summary: Retrieve the current state of a mailbox.
      tags:
        - mailboxes
    put:
      parameters:
        - description: Name of the mailbox
          in: path
          name: mailboxName
          required: true
          schema:
            type: string
        - description: Count of old messages in the mailbox
          in: query
          name: oldMessages
          required: true
          schema:
            format: int32
            type: integer
        - description: Count of new messages in the mailbox
          in: query
          name: newMessages
          required: true
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Change the state of a mailbox. (Note - implicitly creates the mailbox).
      tags:
        - mailboxes
  '/playbacks/{playbackId}':
    delete:
      parameters:
        - description: Playback's id
          in: path
          name: playbackId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Stop a playback.
      tags:
        - playbacks
    get:
      parameters:
        - description: Playback's id
          in: path
          name: playbackId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Playback'
          description: No response was specified
      summary: Get a playback's details.
      tags:
        - playbacks
  '/playbacks/{playbackId}/control':
    post:
      parameters:
        - description: Playback's id
          in: path
          name: playbackId
          required: true
          schema:
            type: string
        - description: Operation to perform on the playback.
          in: query
          name: operation
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Control a playback.
      tags:
        - playbacks
  '/recordings/live/{recordingName}':
    delete:
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Stop a live recording and discard it.
      tags:
        - recordings
    get:
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LiveRecording'
          description: No response was specified
      summary: List live recordings.
      tags:
        - recordings
  '/recordings/live/{recordingName}/mute':
    delete:
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Unmute a live recording.
      tags:
        - recordings
    post:
      description: >-
        Muting a recording suspends silence detection, which will be restarted
        when the recording is unmuted.
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Mute a live recording.
      tags:
        - recordings
  '/recordings/live/{recordingName}/pause':
    delete:
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Unpause a live recording.
      tags:
        - recordings
    post:
      description: >-
        Pausing a recording suspends silence detection, which will be restarted
        when the recording is unpaused. Paused time is not included in the
        accounting for maxDurationSeconds.
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Pause a live recording.
      tags:
        - recordings
  '/recordings/live/{recordingName}/stop':
    post:
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Stop a live recording and store it.
      tags:
        - recordings
  /recordings/stored:
    get:
      parameters:
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/StoredRecording'
                type: array
          description: No response was specified
      summary: List recordings that are complete.
      tags:
        - recordings
  '/recordings/stored/{recordingName}':
    delete:
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          description: No response was specified
      summary: Delete a stored recording.
      tags:
        - recordings
    get:
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StoredRecording'
          description: No response was specified
      summary: Get a stored recording's details.
      tags:
        - recordings
  '/recordings/stored/{recordingName}/copy':
    post:
      parameters:
        - description: The name of the recording to copy
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - description: The destination name of the recording
          in: query
          name: destinationRecordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StoredRecording'
          description: No response was specified
      summary: Copy a stored recording.
      tags:
        - recordings
  '/recordings/stored/{recordingName}/file':
    get:
      parameters:
        - description: The name of the recording
          in: path
          name: recordingName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/binary'
          description: No response was specified
      summary: Get the file associated with the stored recording.
      tags:
        - recordings
  /sounds:
    get:
      parameters:
        - description: Lookup sound for a specific language.
          in: query
          name: lang
          required: false
          schema:
            type: string
        - description: Lookup sound in a specific format.
          in: query
          name: format
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Sound'
                type: array
          description: No response was specified
      summary: List all sounds.
      tags:
        - sounds
  '/sounds/{soundId}':
    get:
      parameters:
        - description: Sound's id
          in: path
          name: soundId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/asteriskID'
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Sound'
          description: No response was specified
      summary: Get a sound's details.
      tags:
        - sounds
security:
  - basicAuth: []
servers:
  - url: 'http://localhost:8088/ari'
tags:
  - description: Stasis application resources
    name: applications
  - description: Asterisk resources
    name: asterisk
  - description: Bridge resources
    name: bridges
  - description: Channel resources
    name: channels
  - description: Device state resources
    name: deviceStates
  - description: Endpoint resources
    name: endpoints
  - description: WebSocket resource
    name: events
  - description: Mailboxes resources
    name: mailboxes
  - description: Playback control resources
    name: playbacks
  - description: Recording resources
    name: recordings
  - description: Sound resources
    name: sounds

